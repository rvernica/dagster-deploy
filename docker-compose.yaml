services:
  # This service runs the gRPC server that loads your user code, in both dagster-webserver
  # and dagster-daemon. By setting DAGSTER_CURRENT_IMAGE to its own image, we tell the
  # run launcher to use this same image when launching runs in a new container as well.
  # Multiple containers like this can be deployed separately - each just needs to run on
  # its own port, and have its own entry in the workspace.yaml file that's loaded by the
  # webserver.
  code-uni:
    image: ghcr.io/rvernica/dagster-university:latest
    restart: always
    environment:
      DAGSTER_CURRENT_IMAGE: dagster-university
      DUCKDB_DATABASE: data/staging/data.duckdb
    env_file:
      - .env
    networks:
      - dagster

  # This service runs dagster-webserver, which loads your user code from the user code container.
  # Since our instance uses the QueuedRunCoordinator, any runs submitted from the webserver will be put on
  # a queue and later dequeued and launched by dagster-daemon.
  webserver:
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint:
      - dagster-webserver
      - -h
      - '0.0.0.0'
      - -p
      - '3000'
      - -w
      - workspace.yaml
    container_name: webserver
    environment:
      DAGSTER_CODE_UNI: code-uni
    env_file:
      - .env
    expose:
      - '3000'
    ports:
      - '3000:3000'
    volumes: # Make docker client accessible so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster
    depends_on:
      code-uni:
        condition: service_started

  # This service runs the dagster-daemon process, which is responsible for taking runs
  # off of the queue and launching them, as well as creating runs from schedules or sensors.
  daemon:
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint:
      - dagster-daemon
      - run
    restart: on-failure
    environment:
      DAGSTER_CODE_UNI: code-uni
    env_file:
      - .env
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster
    depends_on:
      code-uni:
        condition: service_started

networks:
  dagster:
    driver: bridge
